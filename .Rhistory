DATA = read.csv('Mount_Pleasant_Real_Estate_Data.csv')
DATA = read.csv('./Mount_Pleasant_Real_Estate_Data.csv')
DATA = read.csv('D:\R Projects\House Style for Mount Pleasant Real Estate.csv')
View(DATA)
DATA <- read.csv('D:/R Projects/House Style for Mount Pleasant Real Estate/House Style for Mount Pleasant Real Estate.csv')
DATA <- read.csv('D:/R Projects/House Style for Mount Pleasant Real Estate/Mount_Pleasant_Real_Estate_Data.csv')
View(DATA)
clear
View(DATA)
View(DATA$House.Style)
View(factor(DATA$House.Style))
View(table(DATA$House.Style))
View(table("count",DATA$House.Style))
View(table(DATA$House.Style))
View(table(DATA$House.Style)="count")
View(table(DATA$House.Style)[1]="count")
View(table(DATA$House.Style))
View(table(DATA$House.Style), var1)
View(table(DATA$House.Style), DATA$House.Style)
View(table(DATA$House.Style))
View(DATA$House.Style)
View(table(DATA$House.Style))
View(table(DATA$House.Style), table(DATA$House.Style))
View(table(DATA$House.Style))
array <- c(−5,15,−10,−11,−6,−1)
median(array)
array1 <- c(0.279,
0.280,
0.282,
0.284,
0.285,
0.288,
0.288,
0.288,
0.292,
0.293,
0.295,
0.295,
0.296,
0.305,
0.307,
0.313,
0.315,
0.319,
0.323,
0.326)
mean(array1, trim = 0.1)
array <- c(11,9,4,12,10,8)
median(array)
array <- c(3,10,12,4,13,6)
median(array)
array <- c(3,10,12,4,13,6)
mean(array)
array <-c(
657845,
597138,
732186,
515138,
711372,
690125,
520777,
618587)
sum(c) / 2
sum(c)
sum(array)
sum(array)/2
data <- c(24,6,35,20,26,46,21,39,51,6,38,32,15,30,22)
data <- c(24,6,35,20,26,46,21,39,51,6,38,32,15,30,22)
dataSorted <- sort(data)
print(dataSorted)
IQR(data)
data <- c(24,7,34,24,13,30,14,6,39,43,38,31,17,23,43)
dataSorted <- sort(data)
print(dataSorted)
IQR(data)
setwd("D:/R Projects/MA345_Project1_QuanHannahStephanie")
medicalRecords <- read.csv("MedicalData.csv")
medicalRecords <- read.csv("MedicalData.csv")
numberMedicalRecords <- length(medicalRecords$ID.Number)
View(medicalRecords)
#boxplot for attributes
boxplot(medicalRecords$Age, horizontal = TRUE)
boxplot(medicalRecords$Weight..Pounds., horizontal = TRUE)
boxplot(medicalRecords$Total.Cholestrol.Level..mg.dL., horizontal = TRUE)
boxplot(medicalRecords$Systolic.Blood.Pressure..mmHg., horizontal = TRUE)
#Cholesterol Level attribute
cholesterolLevel <- vector()
for (i in 1:numberMedicalRecords) {
currentWeight <- medicalRecords$Weight..Pounds.[i]
if (currentWeight < 200) {
cholesterolLevel <- c(cholesterolLevel, "Good")
} else if (currentWeight < 240) {
cholesterolLevel <- c(cholesterolLevel, "Borderline")
} else {
cholesterolLevel <- c(cholesterolLevel, "High")
}
}
medicalRecords <- cbind(medicalRecords, cholesterolLevel)
View(medicalRecords)
#Blood Pressure attribute
bloodPressure <- vector()
for (i in 1:numberMedicalRecords) {
currentBloodPressureMMHG <- medicalRecords$Systolic.Blood.Pressure..mmHg.[i]
if (currentBloodPressureMMHG < 120) {
bloodPressure <- c(bloodPressure, "Normal")
} else if (currentBloodPressureMMHG < 130) {
bloodPressure <- c(bloodPressure, "Elevated")
} else if (currentBloodPressureMMHG < 140) {
bloodPressure <- c(bloodPressure, "High Blood Pressure Stage 1")
} else {
bloodPressure <- c(bloodPressure, "High Blood Pressure Stage 2")
}
}
medicalRecords <- cbind(medicalRecords, bloodPressure)
View(medicalRecords)
#Histogram Cholesterol Level respect to High Blood Pressure
install.packages("ggplot2")
library(ggplot2)
qplot(medicalRecords$cholesterolLevel, geom = "histogram")
View(medicalRecords)
library(ggplot2)
qplot(medicalRecords$Total.Cholestrol.Level..mg.dL., geom = "histogram")
qplot(medicalRecords$Total.Cholestrol.Level..mg.dL.,
geom = "histogram",
main = "Histogram for Histogram Cholesterol Level grouped by High Blood Pressure")
qplot(medicalRecords$Total.Cholestrol.Level..mg.dL.,
geom = "histogram",
main = "Histogram for Histogram Cholesterol Level grouped by High Blood Pressure",
xlab = "Cholesterol Level")
ggplot(medicalRecords$Total.Cholestrol.Level..mg.dL., aes(x = "Cholesterol Level")) +
geom_histogram(binwidth = .5)
qplot(medicalRecords$Total.Cholestrol.Level..mg.dL.,
geom = "histogram",
main = "Histogram for Histogram Cholesterol Level grouped by High Blood Pressure",
xlab = "Cholesterol Level")
